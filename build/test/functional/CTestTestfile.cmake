# CMake generated Testfile for 
# Source directory: D:/SourceCode/HDS/licensecc/test/functional
# Build directory: D:/SourceCode/HDS/licensecc/build/test/functional
# 
# This file includes the relevant testing commands required for 
# testing this directory and lists subdirectories to be tested as well.
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_crack "D:/SourceCode/HDS/licensecc/build/test/functional/Debug/test_crack.exe")
  set_tests_properties(test_crack PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;69;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_crack "D:/SourceCode/HDS/licensecc/build/test/functional/Release/test_crack.exe")
  set_tests_properties(test_crack PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;69;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_crack "D:/SourceCode/HDS/licensecc/build/test/functional/MinSizeRel/test_crack.exe")
  set_tests_properties(test_crack PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;69;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_crack "D:/SourceCode/HDS/licensecc/build/test/functional/RelWithDebInfo/test_crack.exe")
  set_tests_properties(test_crack PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;69;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
else()
  add_test(test_crack NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_date "D:/SourceCode/HDS/licensecc/build/test/functional/Debug/test_date.exe")
  set_tests_properties(test_date PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;70;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_date "D:/SourceCode/HDS/licensecc/build/test/functional/Release/test_date.exe")
  set_tests_properties(test_date PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;70;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_date "D:/SourceCode/HDS/licensecc/build/test/functional/MinSizeRel/test_date.exe")
  set_tests_properties(test_date PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;70;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_date "D:/SourceCode/HDS/licensecc/build/test/functional/RelWithDebInfo/test_date.exe")
  set_tests_properties(test_date PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;70;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
else()
  add_test(test_date NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_it_hw_identifier "D:/SourceCode/HDS/licensecc/build/test/functional/Debug/test_it_hw_identifier.exe")
  set_tests_properties(test_it_hw_identifier PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;71;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_it_hw_identifier "D:/SourceCode/HDS/licensecc/build/test/functional/Release/test_it_hw_identifier.exe")
  set_tests_properties(test_it_hw_identifier PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;71;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_it_hw_identifier "D:/SourceCode/HDS/licensecc/build/test/functional/MinSizeRel/test_it_hw_identifier.exe")
  set_tests_properties(test_it_hw_identifier PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;71;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_it_hw_identifier "D:/SourceCode/HDS/licensecc/build/test/functional/RelWithDebInfo/test_it_hw_identifier.exe")
  set_tests_properties(test_it_hw_identifier PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;71;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
else()
  add_test(test_it_hw_identifier NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_standard_license "D:/SourceCode/HDS/licensecc/build/test/functional/Debug/test_standard_license.exe")
  set_tests_properties(test_standard_license PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;72;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_standard_license "D:/SourceCode/HDS/licensecc/build/test/functional/Release/test_standard_license.exe")
  set_tests_properties(test_standard_license PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;72;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_standard_license "D:/SourceCode/HDS/licensecc/build/test/functional/MinSizeRel/test_standard_license.exe")
  set_tests_properties(test_standard_license PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;72;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_standard_license "D:/SourceCode/HDS/licensecc/build/test/functional/RelWithDebInfo/test_standard_license.exe")
  set_tests_properties(test_standard_license PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;72;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
else()
  add_test(test_standard_license NOT_AVAILABLE)
endif()
if("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Dd][Ee][Bb][Uu][Gg])$")
  add_test(test_signature_verifier "D:/SourceCode/HDS/licensecc/build/test/functional/Debug/test_signature_verifier.exe")
  set_tests_properties(test_signature_verifier PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;73;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ee][Aa][Ss][Ee])$")
  add_test(test_signature_verifier "D:/SourceCode/HDS/licensecc/build/test/functional/Release/test_signature_verifier.exe")
  set_tests_properties(test_signature_verifier PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;73;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Mm][Ii][Nn][Ss][Ii][Zz][Ee][Rr][Ee][Ll])$")
  add_test(test_signature_verifier "D:/SourceCode/HDS/licensecc/build/test/functional/MinSizeRel/test_signature_verifier.exe")
  set_tests_properties(test_signature_verifier PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;73;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
elseif("${CTEST_CONFIGURATION_TYPE}" MATCHES "^([Rr][Ee][Ll][Ww][Ii][Tt][Hh][Dd][Ee][Bb][Ii][Nn][Ff][Oo])$")
  add_test(test_signature_verifier "D:/SourceCode/HDS/licensecc/build/test/functional/RelWithDebInfo/test_signature_verifier.exe")
  set_tests_properties(test_signature_verifier PROPERTIES  WORKING_DIRECTORY "D:/SourceCode/HDS/licensecc/build" _BACKTRACE_TRIPLES "D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;73;ADD_TEST;D:/SourceCode/HDS/licensecc/test/functional/CMakeLists.txt;0;")
else()
  add_test(test_signature_verifier NOT_AVAILABLE)
endif()
